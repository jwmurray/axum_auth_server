services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-your-email@example.com}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
    networks:
      - web

  app-service:
    image: gardenway/app-service # specify name of image on Docker Hub
    restart: "always" # automatically restart container when server crashes
    environment: # set up environment variables
      AUTH_SERVICE_IP: ${AUTH_SERVICE_IP:-localhost} # Use localhost as the default value
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`${DROPLET_IP:-do.gardenway.org}`) && PathPrefix(`/app`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls.certresolver=letsencrypt"
      - "traefik.http.services.app.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.app-stripprefix.stripprefix.prefixes=/app"
      - "traefik.http.routers.app.middlewares=app-stripprefix"
    networks:
      - web
    depends_on: # only run app-service after auth-service has started
      auth-service:
        condition: service_started

  auth-service:
    image: gardenway/auth-service
    restart: "always" # automatically restart container when server crashes
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`${DROPLET_IP:-do.gardenway.org}`) && PathPrefix(`/auth`)"
      - "traefik.http.routers.auth.entrypoints=websecure"
      - "traefik.http.routers.auth.tls.certresolver=letsencrypt"
      - "traefik.http.services.auth.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.auth-stripprefix.stripprefix.prefixes=/auth"
      - "traefik.http.routers.auth.middlewares=auth-stripprefix"
    networks:
      - web

volumes:
  letsencrypt:

networks:
  web:
    external: false 